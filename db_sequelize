const { Sequelize, Model, DataTypes } = require('sequelize');
const sequelize = new Sequelize('mysql://root:password@localhost:3306/ProjetoBE', {
    pool: {
        max: 10,
        min: 0       
    }
});


const User = require('./models/User.js')(sequelize, Model, DataTypes);
const UserActivity = require('./models/UserActivity.js')(sequelize, Model, DataTypes);
const Review = require('./models/Review.js')(sequelize, Model, DataTypes);
const Notification = require('./models/Notification.js')(sequelize, Model, DataTypes);
const Message = require('./models/Message.js')(sequelize, Model, DataTypes);
const Follow = require('./models/Follows.js')(sequelize, Model, DataTypes);
const Comment = require('./models/Comment.js')(sequelize, Model, DataTypes);
const Chat= require('./models/Chat.js')(sequelize, Model, DataTypes);
const Category = require('./models/Category.js')(sequelize, Model, DataTypes);
const Ad= require('./models/Ad.js')(sequelize, Model, DataTypes);
const AdImage = require('./models/AdImage.js')(sequelize, Model, DataTypes);

// User Associations
User.hasMany(Ad, {foreignKey: 'user_id'});
User.hasMany(Comment, {foreignKey: 'user_id'});
User.hasMany(Review, {foreignKey: 'user_id', as: 'reviewsGiven'});
User.hasMany(Review, {foreignKey: 'reviewed_user_id', as: 'reviewsReceived'});
User.hasMany(UserActivity, {foreignKey: 'user_id'});
User.hasMany(Follow, {foreignKey: 'user_id'});
User.hasMany(Notification, {foreignKey: 'user_id'});
User.hasMany(Chat, {foreignKey: 'buyer_id', as: 'buyerChats'});
User.hasMany(Chat, {foreignKey: 'seller_id', as: 'sellerChats'});
User.hasMany(Message, {foreignKey: 'sender_id', as: 'sentMessages'});

// Ad Associations
Ad.belongsTo(User, {foreignKey: 'user_id'});
Ad.belongsTo(Category, {foreignKey: 'category_id'});
Ad.hasMany(AdImage, {foreignKey: 'ad_id'});
Ad.hasMany(Comment, {foreignKey: 'ad_id'});
Ad.hasMany(UserActivity, {foreignKey: 'ad_id'});
Ad.hasMany(Follow, {foreignKey: 'ad_id'});
Ad.hasMany(Chat, {foreignKey: 'ad_id'});

// Category Associations
Category.hasMany(Ad, {foreignKey: 'category_id'});

// AdImage Associations
AdImage.belongsTo(Ad, {foreignKey: 'ad_id'});

// Comment Associations
Comment.belongsTo(User, {foreignKey: 'user_id'});
Comment.belongsTo(Ad, {foreignKey: 'ad_id'});

// Review Associations
Review.belongsTo(User, {foreignKey: 'user_id', as: 'reviewer'});
Review.belongsTo(User, {foreignKey: 'reviewed_user_id', as: 'reviewedUser'});

// UserActivity Associations
UserActivity.belongsTo(User, {foreignKey: 'user_id'});
UserActivity.belongsTo(Ad, {foreignKey: 'ad_id'});

// Follow Associations
Follow.belongsTo(User, {foreignKey: 'user_id'});
Follow.belongsTo(Ad, {foreignKey: 'ad_id'});

// Notification Associations
Notification.belongsTo(User, {foreignKey: 'user_id'});

// Chat Associations
Chat.belongsTo(Ad, {foreignKey: 'ad_id'});
Chat.belongsTo(User, {foreignKey: 'buyer_id', as: 'buyer'});
Chat.belongsTo(User, {foreignKey: 'seller_id', as: 'seller'});
Chat.hasMany(Message, {foreignKey: 'chat_id'});

// Message Associations
Message.belongsTo(Chat, {foreignKey: 'chat_id'});
Message.belongsTo(User, {foreignKey: 'sender_id', as: 'sender'});



async function addDBdata() {
    try {
        await sequelize.sync({ force: true }); 

        // Create sample users
        const users = await User.bulkCreate([
            {
                username: 'alice_smith',
                email: 'alice@example.com',
                password: "secure123",
                address: '123 Main St, New York',
                phone: '555-0101',
                role: 'user'
            },
            {
                username: 'bob_johnson',
                email: 'bob@example.com',
                password: "secure456",
                address: '456 Oak Ave, Boston',
                phone: '555-0202',
                role: 'user'
            },
            {
                username: 'admin_jane',
                email: 'jane@admin.com',
                password: "admin123",
                address: '789 Admin Blvd',
                phone: '555-0000',
                role: 'user'
            }
        ]);

        // Create sample categories
        const categories = await Category.bulkCreate([
            {
                category_name: 'Electronics',
                sub_category_name: 'Smartphones'
            },
            {
                category_name: 'Furniture',
                sub_category_name: 'Sofas'
            }
        ]);

        // Create sample ads
        const ads = await Ad.bulkCreate([
            {
                user_id: users[0].user_id,
                category_id: categories[0].category_id,
                title: 'iPhone 13 Pro - Like New',
                product_name: 'iPhone 13 Pro',
                address: '123 Main St, New York',
                price: 799.99,
                product_condition: 'Excellent',
                description: 'iPhone 13 Pro 256GB in perfect condition with original box and accessories.',
                active_promotion: true,
                keywords: 'apple,iphone,smartphone'
            },
            {
                user_id: users[1].user_id,
                category_id: categories[1].category_id,
                title: 'Leather Sofa - Great Condition',
                product_name: 'Leather Sofa',
                address: '456 Oak Ave, Boston',
                price: 450.00,
                product_condition: 'Good',
                description: '3-seater leather sofa in brown color. Minor wear but very comfortable.',
                active_promotion: false,
                keywords: 'sofa,couch,furniture'
            }
        ]);

        // Create sample ad images
        await AdImage.bulkCreate([
            {
                ad_id: ads[0].ad_id,
                image_url: 'https://example.com/images/iphone1.jpg'
            },
            {
                ad_id: ads[0].ad_id,
                image_url: 'https://example.com/images/iphone2.jpg'
            },
            {
                ad_id: ads[1].ad_id,
                image_url: 'https://example.com/images/sofa1.jpg'
            }
        ]);

        // Create sample comments
        await Comment.bulkCreate([
            {
                user_id: users[1].user_id,
                ad_id: ads[0].ad_id,
                comment: 'Is the phone still available?'
            },
            {
                user_id: users[0].user_id,
                ad_id: ads[1].ad_id,
                comment: 'Can you deliver the sofa?'
            }
        ]);

        console.log('Database seeded successfully!');
    } catch (error) {
        console.error('Error seeding database:', error);
    } finally {
        await sequelize.close();
    }
}

addDBdata();

module.exports = { 
    User,
    UserActivity,
    Review,
    Notification,
    Message,
    Follow,
    Comment,
    Chat,
    Category,
    AdImage,
    Ad
}